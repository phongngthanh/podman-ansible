// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.241.1/containers/debian
{
	"name": "Debian",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'VARIANT' to pick an Debian version: bullseye, buster
		// Use bullseye on local arm64/Apple Silicon.
		"args": {
			"VARIANT": "bullseye"
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
	"mounts": [
		"source=${localEnv:HOME}/.config/sops/age/keys.txt,target=/home/vscode/.config/sops/age/keys.txt,type=bind",
		"source=${localEnv:HOME}/.local/share/fish,target=/home/vscode/.local/share/fish,type=bind",
		"source=vscode-extension,target=/home/vscode/.vscode-server/extensions,type=volume", // Cache extensions reinstall. Source: https://code.visualstudio.com/remote/advancedcontainers/avoid-extension-reinstalls
		"source=ansible-cache,target=/home/vscode/.ansible,type=volume"
	],
	"settings": {
		"ansible.validate.executablePath": "/usr/local/bin/ansible",
		"editor.formatOnSave": true,
		"editor.codeActionsOnSave": {
			"source.fixAll.sortJSON": true
		}
	},
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"GitHub.vscode-pull-request-github",
				"Grafana.vscode-jsonnet",
				"bierner.markdown-mermaid",
				"eamodio.gitlens",
				"ms-azuretools.vscode-docker",
				"pascalreitermann93.vscode-yaml-sort",
				"redhat.vscode-yaml",
				"richie5um2.vscode-sort-json",
				"signageos.signageos-vscode-sops",
				"tyriar.sort-lines",
				"wholroyd.jinja",
				"yzhang.markdown-all-in-one"
			]
		}
	},
	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	// Run with podman
	"runArgs": [
		"--userns=keep-id"
	],
	"postCreateCommand": "./.devcontainer/postCreateCommand.sh",
	"remoteUser": "vscode",
	"containerUser": "vscode"
}