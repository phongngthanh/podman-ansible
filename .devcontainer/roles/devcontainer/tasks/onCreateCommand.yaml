- name: Check if aqua is installed
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/.local/share/aquaproj-aqua/bin/aqua"
  register: aqua_install_state

- name: Check aqua version
  when: aqua_install_state.stat.exists
  changed_when: false
  ansible.builtin.command:
    cmd: aqua --version
  register: aqua_current_version

- name: Get aqua current version
  ansible.builtin.set_fact:
    aqua_current_version: "v{{ aqua_current_version.stdout | regex_search('\\d+\\.\\d+\\.\\d+') }}"
  when: aqua_install_state.stat.exists

- name: Install aqua
  when: (not aqua_install_state.stat.exists) or (aqua_current_version != ansible_env.AQUA_VERSION)
  block:
    - name: Download aqua
      ansible.builtin.get_url:
        url: https://github.com/aquaproj/aqua/releases/download/{{ ansible_env.AQUA_VERSION }}/aqua_linux_{{ custom_fact_ansible_alternative_architecture }}.tar.gz
        dest: "{{ ansible_user_dir }}/aqua.tar.gz"
        mode: "0644"
        force: true

    - name: Unpack aqua
      ansible.builtin.unarchive:
        src: "{{ ansible_user_dir }}/aqua.tar.gz"
        dest: "{{ ansible_user_dir }}"
        include:
          - aqua

    - name: Install aqua
      ansible.builtin.copy:
        remote_src: true
        src: "{{ ansible_user_dir }}/aqua"
        dest: "{{ ansible_user_dir }}/.local/share/aquaproj-aqua/bin/aqua"
        mode: "0777"

- name: Setup aqua config directory
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/aquaproj-aqua"
    mode: "0755"
    state: directory

- name: Setup aqua global config file
  ansible.builtin.copy:
    src: ../aqua.yaml
    mode: "0644"
    dest: "{{ ansible_user_dir }}/.config/aquaproj-aqua/aqua.yaml"

- name: Install aqua dependencies
  changed_when: false
  ansible.builtin.command:
    cmd: aqua install --all

- name: Install nodejs software
  block:
    - name: Install npm
      changed_when: false
      ansible.builtin.shell:
        cmd: |
          source /usr/local/share/nvm/nvm.sh
          nvm install
        executable: /bin/bash
    - name: Copy package.json to global
      ansible.builtin.copy:
        src: "./{{ item }}"
        dest: "{{ ansible_user_dir }}/{{ item }}"
        mode: "0644"
      loop:
        - package.json
        - package-lock.json
    - name: Install global npm packages
      changed_when: false
      ansible.builtin.command:
        chdir: "{{ ansible_user_dir }}"
        cmd: npm install
