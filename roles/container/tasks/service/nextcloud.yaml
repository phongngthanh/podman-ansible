- name: Nextcloud pod
  module_defaults:
    containers.podman.podman_container:
      labels:
        io.containers.autoupdate: registry
      pod: nextcloud
      state: "{{ nextcloud_state }}"
  block:
    - name: Nextcloud
      containers.podman.podman_container:
        env:
          NEXTCLOUD_TRUTED_DOMAINS: "{{ nextcloud_trusted_domains }}"
          OVERWRITEPROTOCOL: https
          POSTGRES_DB: "{{ nextcloud_postgres_db }}"
          POSTGRES_HOST: localhost:5432
          POSTGRES_PASSWORD: "{{ nextcloud_postgres_password }}"
          POSTGRES_USER: "{{ nextcloud_postgres_user }}"
          REDIS_HOST: localhost
          REDIS_HOST_PASSWORD: "{{ nextcloud_redis_host_password }}"
          TZ: "{{ global_timezone }}"
        image: docker.io/nextcloud:stable@sha256:3b12f86b0b17d8de4c0e8cf515a5db7b8ff625fa0d2beca4835065b944d6f9f1
        name: nextcloud-web
        volumes:
          - "{{ nextcloud_volume_web_storage }}:/var/www/html/data:z"
          - "{{ nextcloud_volume_web_data }}:/var/www/html:z"
      when: nextcloud_db_action == "none"

    - name: Nextcloud chown
      ansible.builtin.command:
        cmd: podman exec -it nextcloud-web chown -R www-data:www-data ./
      changed_when: false

    - name: Nextcloud Redis
      containers.podman.podman_container:
        command: redis-server --requirepass {{ nextcloud_redis_host_password }}
        env:
          TZ: "{{ global_timezone }}"
        image: docker.io/redis:7-alpine@sha256:06e4453169faaf4af93fe38689c8f8f85440990f9b9c1e91b0f9f98b1679452a
        name: nextcloud-redis
      when: nextcloud_db_action == "none"

    - name: Clean current database
      when: nextcloud_db_action == "import"
      block:
        - name: Remove current database
          become: true
          ansible.builtin.file:
            path: "{{ nextcloud_volume_db_data }}"
            state: absent
        - name: Create empty database folder
          ansible.builtin.file:
            path: "{{ nextcloud_volume_db_data }}"
            state: directory
            mode: "0755"

    - name: Nextcloud database
      containers.podman.podman_container:
        env:
          POSTGRES_DB: "{{ nextcloud_postgres_db }}"
          POSTGRES_PASSWORD: "{{ nextcloud_postgres_password }}"
          POSTGRES_USER: "{{ nextcloud_postgres_user }}"
          TZ: "{{ global_timezone }}"
        image: docker.io/postgres:15-alpine@sha256:46bff4a5bd9ee7d78fc835c73fa8ff477051f603b89e796ea28fe83171e064e4
        name: nextcloud-db
        volumes:
          - "{{ nextcloud_volume_db_data }}:/var/lib/postgresql/data:U,z"

    - name: Ugrade nextcloud
      ansible.builtin.command:
        cmd: podman exec --user www-data -it nextcloud-web {{ item }}
      loop:
        - php occ upgrade
        - php occ maintenance:mode --off
      changed_when: false
      when: nextcloud_db_action == "none"

- name: Nextcloud database export
  when: nextcloud_db_action == "export"
  block:
    - name: Make backup nextcloud volume folder
      ansible.builtin.file:
        path: "{{ nextcloud_volume }}/db_bak"
        state: directory
        mode: "0755"
    - name: Backup nextcloud volume
      become: true
      changed_when: false
      ansible.builtin.command:
        chdir: "{{ nextcloud_volume }}"
        cmd: cp -ra {{ nextcloud_volume_db_data }} ./db_bak/{{ ansible_date_time.iso8601_basic_short }}
    - name: Create nextcloud db dump
      ansible.builtin.shell:
        chdir: "{{ nextcloud_volume }}"
        cmd: podman exec nextcloud-db pg_dumpall -U {{ nextcloud_postgres_user }} > dump.sql
      changed_when: false
    - name: Remove nextcloud container
      containers.podman.podman_container:
        name: nextcloud-db
        state: absent

- name: Nextcloud database import
  when: nextcloud_db_action == "import"
  block:
    - name: Import db into nextcloud
      ansible.builtin.shell:
        chdir: "{{ nextcloud_volume }}"
        cmd: podman exec -i nextcloud-db psql -U {{ nextcloud_postgres_user }} < dump.sql
      register: import_output
      until: import_output.rc == 0
      retries: 10
      changed_when: false
