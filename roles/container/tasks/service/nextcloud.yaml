- name: Nextcloud
  block:
    - name: Nextcloud setup
      when: nextcloud_db_action == "none"
      block:
        - name: Nextcloud
          containers.podman.podman_container:
            env:
              NEXTCLOUD_TRUTED_DOMAINS: nextcloud.{{ server_domain }}
              OVERWRITEPROTOCOL: https
              POSTGRES_DB: nextcloud
              POSTGRES_HOST: localhost:5432
              POSTGRES_PASSWORD: "{{ nextcloud_postgres_password }}"
              POSTGRES_USER: postgres
              REDIS_HOST: localhost
              REDIS_HOST_PASSWORD: "{{ nextcloud_redis_password }}"
              TZ: "{{ global_timezone }}"
            image: docker.io/nextcloud:stable@sha256:73da78ea98b521d52f36b40aa58892395ea7babbbaf44f6a63213c5a8df9ebd7
            name: nextcloud-web
            volumes:
              - "{{ nextcloud_volume_web_storage }}:/var/www/html/data:z"
              - "{{ nextcloud_volume_web_data }}:/var/www/html:z"

        - name: Nextcloud chown
          ansible.builtin.command:
            cmd: podman exec -it nextcloud-web chown -R www-data:www-data ./
          changed_when: false

        - name: Nextcloud Redis
          containers.podman.podman_container:
            command: redis-server --requirepass {{ nextcloud_redis_password }}
            env:
              TZ: "{{ global_timezone }}"
            image: docker.io/redis:7-alpine@sha256:a5481d685c31d0078b319e39639cb4f5c2c9cf4ebfca1ef888f4327be9bcc5a7
            name: nextcloud-redis

    - name: Clean current database
      when: nextcloud_db_action == "import"
      block:
        - name: Remove current database
          become: true
          ansible.builtin.file:
            path: "{{ nextcloud_volume_db_data }}"
            state: absent
        - name: Create empty database folder
          ansible.builtin.file:
            path: "{{ nextcloud_volume_db_data }}"
            state: directory
            mode: "0755"

    - name: Nextcloud database
      containers.podman.podman_container:
        env:
          POSTGRES_DB: nextcloud
          POSTGRES_PASSWORD: "{{ nextcloud_postgres_password }}"
          POSTGRES_USER: postgres
          TZ: "{{ global_timezone }}"
        image: docker.io/postgres:14-alpine@sha256:446abaf8831c54f57212c0ae52f5df84e69eeb2767e2376d07bed9c9742b1243
        name: nextcloud-db
        volumes:
          - "{{ nextcloud_volume_db_data }}:/var/lib/postgresql/data:U,z"

    - name: Ugrade nextcloud
      ansible.builtin.command:
        cmd: podman exec --user www-data -it nextcloud-web {{ item }}
      loop:
        - php occ upgrade
        - php occ maintenance:mode --off
      changed_when: false
      when: nextcloud_db_action == "none"

- name: Nextcloud database export
  when: nextcloud_db_action == "export"
  block:
    - name: Make backup nextcloud volume folder
      ansible.builtin.file:
        path: "{{ nextcloud_volume }}/db_bak"
        state: directory
        mode: "0700"
    - name: Backup nextcloud volume # noqa: risky-file-permissions
      become: true
      ansible.builtin.copy:
        dest: "{{ nextcloud_volume }}//db_bak/{{ ansible_date_time.iso8601_basic_short }}"
        directory_mode: recursive
        group: "{{ ansible_user }}"
        mode: "0700"
        owner: "{{ ansible_user }}"
        remote_src: true
        src: "{{ nextcloud_volume_db_data }}"
    - name: Create nextcloud db dump
      changed_when: false
      ansible.builtin.shell:
        chdir: "{{ nextcloud_volume }}"
        cmd: podman exec nextcloud-db pg_dumpall -U {{ nextcloud_postgres_user }} > dump.sql
    - name: Remove nextcloud container
      containers.podman.podman_container:
        name: nextcloud-db
        state: absent

- name: Nextcloud database import
  when: nextcloud_db_action == "import"
  block:
    - name: Import db into nextcloud
      ansible.builtin.shell:
        chdir: "{{ nextcloud_volume }}"
        cmd: podman exec -i nextcloud-db psql -U {{ nextcloud_postgres_user }} < dump.sql
      register: import_output
      until: import_output.rc == 0
      retries: 10
      changed_when: false
