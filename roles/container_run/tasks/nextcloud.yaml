- name: Prepare data folder
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ nextcloud_db_data }}"
    - "{{ nextcloud_storage_data }}"
    - "{{ nextcloud_web_data }}"

- name: Stop systemd
  ansible.builtin.systemd:
    name: nextcloud
    daemon_reload: true
    enabled: true
    scope: user
    state: stopped
  ignore_errors: true

- name: Pod
  containers.podman.podman_pod:
    name: nextcloud
    infra_name: nextcloud-pod
    network: caddy
    state: "{{ nextcloud_state }}"

- name: Nextcloud
  containers.podman.podman_container:
    env:
      NEXTCLOUD_TRUTED_DOMAINS: "{{ nextcloud_trusted_domains }}"
      OVERWRITEPROTOCOL: https
      POSTGRES_DB: "{{ nextcloud_postgres_db }}"
      POSTGRES_HOST: localhost:5432
      POSTGRES_PASSWORD: "{{ nextcloud_postgres_password }}"
      POSTGRES_USER: "{{ nextcloud_postgres_user }}"
      REDIS_HOST: localhost
      REDIS_HOST_PASSWORD: "{{ nextcloud_redis_host_password }}"
    image: "{{ nextcloud_web_image }}"
    labels:
      io.containers.autoupdate: registry
    name: nextcloud-web
    pod: nextcloud
    restart_policy: on-failure
    state: "{{ nextcloud_state }}"
    volumes:
      - "{{ nextcloud_storage_data }}:/var/www/html/data:z"
      - "{{ nextcloud_web_data }}:/var/www/html:z"
      - /etc/localtime:/etc/localtime:ro,z
  register: container
  until: container.failed == false

- name: Nextcloud Redis
  containers.podman.podman_container:
    command: redis-server --requirepass {{ nextcloud_redis_host_password }}
    image: "{{ nextcloud_redis_image }}"
    labels:
      io.containers.autoupdate: registry
    name: nextcloud-redis
    pod: nextcloud
    restart_policy: on-failure
    state: "{{ nextcloud_state }}"
    volume:
      - /etc/localtime:/etc/localtime:ro,z
  register: container
  until: container.failed == false

- name: Nextcloud database
  containers.podman.podman_container:
    env:
      POSTGRES_DB: "{{ nextcloud_postgres_db }}"
      POSTGRES_PASSWORD: "{{ nextcloud_postgres_password }}"
      POSTGRES_USER: "{{ nextcloud_postgres_user }}"
    image: "{{ nextcloud_postgres_image }}"
    labels:
      io.containers.autoupdate: registry
    name: nextcloud-db
    pod: nextcloud
    restart_policy: on-failure
    state: "{{ nextcloud_state }}"
    volumes:
      - "{{ nextcloud_db_data }}:/var/lib/postgresql/data:U,z"
      - /etc/localtime:/etc/localtime:ro,z
  register: container
  until: container.failed == false

- name: Install systemd
  vars:
    service_name: nextcloud
    service_state: "{{ nextcloud_state }}"
  import_tasks: systemd.yaml
