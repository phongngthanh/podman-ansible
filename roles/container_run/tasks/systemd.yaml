- name: "Install {{ service_name }} systemd"
  ansible.builtin.command:
    chdir: ~/.config/systemd/user
    cmd: "podman generate systemd --name --files --no-header --container-prefix service --pod-prefix service {{ service_name }}"
  register: systemd_files
  changed_when: False
  when: service_state == "started"

- name: "Enable {{ service_name }} systemd service"
  ansible.builtin.systemd:
    daemon_reload: yes
    enabled: yes
    name: service-{{ service_name }}
    scope: user
    state: started
  when: service_state == "started"
  # When running the systemd unit for the first time, the unit returns error. It still runs later on however.
  ignore_errors: yes

- name: "Check if {{ service_name }} systemd file exists"
  ansible.builtin.stat:
    path: "~/.config/systemd/user/service-{{ service_name }}.service"
  register: systemd_state

- name: "Disable {{ service_name }} systemd service"
  ansible.builtin.systemd:
    daemon_reload: yes
    enabled: no
    name: service-{{ service_name }}
    scope: user
    state: stopped
  when: service_state == "absent" and systemd_state.stat.exists
# TODO: Remove systemd service files
# - name: "Remove {{ service_name }} systemd files"
#   ansible.builtin.file:
#     path: "{{ item }}"
#     state: absent
#   loop: "{{ systemd_files.stdout_lines }}"
#   when: service_state == "absent" and not systemd_files
