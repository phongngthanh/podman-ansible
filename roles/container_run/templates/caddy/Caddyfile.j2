(basic-auth) {
  basicauth / {
    {{ caddyfile_auth_user }} {{ caddyfile_auth_pass }}
  }
}
# A snippet to check if a cookie token is set. if not, store the current page as the referer and redirect to auth site
(proxy-auth) {
  # if cookie not = some-token-nonsense
  @no-auth {
    not path *favicon*
    not header_regexp mycookie Cookie myid={{ caddyfile_auth_token }}
    # https://github.com/caddyserver/caddy/issues/3916
  }
  # store current time, page and redirect to auth
  route @no-auth {
    header Set-Cookie "myreferer={scheme}://{host}{uri}; Domain={{ server_domain }}; Path=/; Max-Age=30; HttpOnly; SameSite=Strict; Secure"
    redir https://auth.{{ server_domain }}
  }
}
auth.{{ server_domain }} {
  route {
    # require authentication
    import basic-auth
    # upon successful auth, set a client token
    header Set-Cookie "myid={{ caddyfile_auth_token }}; Domain={{ server_domain }}; Path=/; Max-Age=3600; HttpOnly; SameSite=Strict; Secure"
    # delete the referer cookie
    header +Set-Cookie "myreferer=null; Domain={{ server_domain }}; Path=/; Expires=Thu, 25 Sep 1971 12:00:00 GMT; HttpOnly; SameSite=Strict; Secure"
    # redirect back to the original site
    redir {http.request.cookie.myreferer}
  }
  # fallback
  respond "Nope"
}
(global-config) {
    encode gzip
}
(security-header) {
    header_down Strict-Transport-Security "max-age=15552000;"
    header_down Referrer-Policy "strict-origin-when-cross-origin"
    header_down X-XSS-Protection "1; mode=block"
    header_down X-Content-Type-Options "nosniff"
    header_down X-Frame-Options "SAMEORIGIN"
}
{% for key,value in systemd_container_service.items() %}
{% if not (value.reverse_proxy_custom is defined and value.reverse_proxy_custom) %}
{{ key }}.{{ server_domain }} {
{% if not value.certbot is defined or not value.certbot %}
    import global-config
{% if value.proxy_auth is defined and value.proxy_auth %}
    import proxy-auth
{% endif %}
{% if value.rewrite is defined %}
{% for rule in value.rewrite %}
    rewrite {{ rule.src }} {{ rule.dest }}
{% endfor %}
{% endif %}
{% if value.use_host_network is defined and value.use_host_network %}
    reverse_proxy {{ caddyfile_host_address }}:{{ value.reverse_proxy_port }} {
{% else %}
    reverse_proxy {{ key }}:{{ value.reverse_proxy_port }} {
{% endif %}
        import security-header
    }
{% if key == 'nextcloud' %}
    redir /.well-known/carddav /remote.php/carddav 301
    redir /.well-known/caldav /remote.php/caldav 301
{% endif %}
{% else %}

{% endif %}
}
{% endif %}
{% endfor %}
netdata.{{ server_domain }} {
    import global-config
    import proxy-auth
    reverse_proxy {{ caddyfile_host_address }}:19999 {
        import security-header
    }
}
scrutiny.{{ server_domain }} {
    import global-config
    import proxy-auth
    reverse_proxy {{ caddyfile_host_address }}:18080 {
        import security-header
    }
}
{{ caddyfile_lan_address }} {
    import global-config
    reverse_proxy https://{{ caddyfile_host_address }}:9090 {
        import security-header
        transport http {
            tls_insecure_skip_verify
            }
        }
    tls internal
}