- name: Check if nvidia driver is installed
  changed_when: false
  ansible.builtin.command:
    cmd: lspci
  register: lspci

- name: Setup nvidia driver
  when: lspci.stdout is search("NVIDIA")
  become: true
  block:
    - name: Get fedora version
      ansible.builtin.command: # noqa: command-instead-of-module
        cmd: rpm -E %fedora
      changed_when: false
      register: common_fedora_version_output
    - name: Add rpm fusion repo non-free
      ansible.builtin.dnf:
        name: https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ common_fedora_version_output.stdout }}.noarch.rpm
        disable_gpg_check: true
        state: present
    - name: Install nvidia driver
      ansible.builtin.dnf:
        name:
          - akmod-nvidia
          - xorg-x11-drv-nvidia-cuda # For cuda/nvdec/nvenc support
        state: latest
      register: nvidia_driver
    # https://forums.developer.nvidia.com/t/nvidia-powerd-fails-to-start-on-fedora-36-510-68-02-driver/218254
    - name: Disable nvidia powerd service
      ansible.builtin.systemd:
        name: nvidia-powerd
        state: stopped
        daemon_reload: true
        masked: false
        enabled: false
    - name: Add nvidia container runtime repo
      ansible.builtin.get_url:
        url: https://nvidia.github.io/libnvidia-container/stable/rpm/nvidia-container-toolkit.repo
        dest: /etc/yum.repos.d/nvidia-container-toolkit.repo
        mode: "0644"
    - name: Check if nvidia container runtime exists
      ansible.builtin.stat:
        path: /usr/bin/nvidia-container-toolkit
      register: nvidia_container_toolkit
    # When fedora is upgraded, it seems that nvidia container runtime symlink is removed, so the package need to be reinstalled
    - name: Reinstall nvidia container runtime
      when: not nvidia_container_toolkit.stat.exists
      block:
        - name: Remove nvidia-container-toolkit
          ansible.builtin.dnf:
            name: nvidia-container-toolkit
            state: absent
        - name: Install nvidia-container-toolkit
          ansible.builtin.dnf:
            name: nvidia-container-toolkit
            state: latest
    # https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#step-3-rootless-containers-setup
    - name: Add rootless support for nvidia gpu container runtime
      ansible.builtin.lineinfile:
        path: /etc/nvidia-container-runtime/config.toml
        regexp: ^#no-cgroups = false
        line: no-cgroups = true
    # https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/cdi-support.html
    # We need to rerun the cdi config generate service after a nvidia driver updates
    # But since we update the nvidia driver automatically, the simplest solution is to just
    # run the cdi config generate service on boot
    - name: Setup custom Nvidia container runtime config
      block:
        - name: Setup CID config generate service
          ansible.builtin.copy:
            content: |
              [Unit]
              Description=Generate nvidia cdi config
              After=network-online.target
              Wants=network-online.target

              [Service]
              Type=oneshot
              ExecStart=/usr/bin/nvidia-ctk cdi generate --output=/etc/cdi/nvidia.yaml

              [Install]
              WantedBy=multi-user.target
            dest: /etc/systemd/system/nvidia-cdi-generate.service
            mode: "0644"
        - name: Enable CID config generate service
          changed_when: false
          ansible.builtin.systemd:
            name: nvidia-cdi-generate
            state: started
            daemon_reload: true
            enabled: true
        - name: Install nvidia limit removal script
          changed_when: false
          failed_when:
            - not (nvidia_patch.stdout | regex_search("Patch for this \(.*\) nvidia driver not found"))
            - nvidia_patch.rc != 0
          ansible.builtin.script:
            cmd: submodules/nvidia-patch/patch.sh
          register: nvidia_patch
      rescue:
        - name: Reboot to apply nvidia driver
          ansible.builtin.reboot:
            reboot_timeout: 600
        - name: Reinstall nvidia limit removal script
          changed_when: false
          ansible.builtin.script:
            cmd: submodules/nvidia-patch/patch.sh
        - name: Enable CID config generate service
          changed_when: false
          ansible.builtin.systemd:
            name: nvidia-cdi-generate
            state: started
            daemon_reload: true
            enabled: true
    - name: Allow container to access device
      ansible.posix.seboolean:
        name: container_use_devices
        state: true
        persistent: true
