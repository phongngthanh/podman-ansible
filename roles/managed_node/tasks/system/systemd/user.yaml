- name: Setup systemd for user
  tags: systemd_user
  block:
    - name: Check if user is lingering {{ ansible_env.USER }}
      ansible.builtin.stat:
        path: "/var/lib/systemd/linger/{{ ansible_env.USER }}"
      register: user_lingering

    - name: Enable lingering if neccessary
      ansible.builtin.command: "loginctl enable-linger {{ ansible_env.USER }}"
      when:
        - not user_lingering.stat.exists

    - name: Template the systemd service
      vars:
        template_var: "{{ item }}"
      ansible.builtin.template:
        src: "user/{{ item.name }}.service.j2"
        dest: "{{ ansible_user_dir }}/.config/systemd/user/{{ item.name }}.service"
        mode: "0600"
      loop: "{{ systemd.user }}"

    - name: Enable the systemd service
      ansible.builtin.systemd:
        daemon_reload: true
        scope: user
        enabled: true
        state: restarted
        name: "{{ item.name }}"
      loop: "{{ systemd.user }}"
      when: not item.schedule is defined

    - name: Setyp systemd timer
      ansible.builtin.include_role:
        name: systemd_timer
      loop: "{{ systemd.user }}"
      vars:
        systemd_description: "{{ item.description }}"
        systemd_name: "{{ item.name }}"
        systemd_schedule: "{{ item.schedule }}"
        systemd_scope: user
        systemd_state: "{{ item.state }}"
      when: item.schedule is defined
