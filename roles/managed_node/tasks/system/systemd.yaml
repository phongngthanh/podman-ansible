- name: "Check if user {{ ansible_user }} is lingering"
  stat:
    path: "/var/lib/systemd/linger/{{ ansible_user }}"
  register: user_lingering

- name: Enable lingering if neccessary
  command: "loginctl enable-linger {{ ansible_user }}"
  when:
    - not user_lingering.stat.exists

- name: Template the ansible systemd service
  vars:
    # systemd_description: "{{ item.systemd_description }}"
    # systemd_playbook: "{{ item.name }}"
    # command: "{{ item.command }}"
    # systemd_working_directory: "{{ item.systemd_working_directory }}"
    template_var: "{{ item }}"
  ansible.builtin.template:
    src: "{{ item.name }}.service.j2"
    dest: "/home/{{ ansible_user }}/.config/systemd/user/{{ item.name }}.service"
  loop: "{{ systemd.podman.service }}"
  notify: Run the systemd service

- name: Enable the systemd service
  ansible.builtin.systemd:
    daemon_reload: yes
    scope: user
    enabled: yes
    state: restarted
    name: "{{ item.name }}"
  loop: "{{ systemd.podman.service }}"
  when: item.enable is defined

- name: Template the ansible timer
  vars:
    # timer_description: "{{ item.systemd_description }}"
    # timer: "{{ item.timer }}"
    template_var: "{{ item }}"
  ansible.builtin.template:
    src: "{{ item.name }}.timer.j2"
    dest: "/home/{{ ansible_user }}/.config/systemd/user/{{ item.name }}.timer"
  loop: "{{ systemd.podman.service }}"
  when: item.timer is defined
  notify: Run the systemd timer
