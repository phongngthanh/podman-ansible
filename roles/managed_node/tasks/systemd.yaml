- name: Setup variable for user scope
  ansible.builtin.set_fact:
    managed_node_systemd_path: "{{ ansible_user_dir }}/.config/systemd/user/{{ managed_node_systemd_name }}.service"
    managed_node_systemd_scope: user
  when: not managed_node_systemd_become

- name: Setup variable for system scope
  ansible.builtin.set_fact:
    managed_node_systemd_path: /etc/systemd/system/{{ managed_node_systemd_name }}.service
    managed_node_systemd_scope: system
  when: managed_node_systemd_become

- name: Setup systemd
  module_defaults:
    ansible.builtin.systemd:
      daemon_reload: true
      name: "{{ managed_node_systemd_name }}"
      scope: "{{ managed_node_systemd_scope }}"
  become: "{{ managed_node_systemd_become }}"
  block:
    - name: Remove systemd timer {{ managed_node_systemd_name }}
      when: managed_node_systemd_state == "absent"
      block:
        - name: Stop systemd
          ansible.builtin.systemd: # noqa: args[module]
            enabled: false
            state: stopped
        - name: Remove systemd file
          ansible.builtin.file:
            path: "{{ managed_node_systemd_path }}"
            state: absent

    - name: Set systemd state {{ managed_node_systemd_state }}
      when: managed_node_systemd_state == "started" or managed_node_systemd_state == "stopped"
      block:
        - name: Template systemd service {{ managed_node_systemd_name }}
          ansible.builtin.template:
            src: "systemd/{{ managed_node_systemd_name }}.service.j2"
            dest: "{{ managed_node_systemd_path }}"
            mode: "0600"

        - name: Enable systemd service {{ managed_node_systemd_name }} # noqa: args[module]
          ansible.builtin.systemd:
            enabled: true
            state: started
          when: managed_node_systemd_schedule == ''

    - name: Setyp systemd timer {{ managed_node_systemd_name }} # noqa: var-naming[no-role-prefix]
      ansible.builtin.include_role:
        name: systemd_timer
      vars:
        systemd_timer_name: "{{ managed_node_systemd_name }}"
        systemd_timer_become: "{{ managed_node_systemd_become }}"
        systemd_timer_schedule: "{{ managed_node_systemd_schedule }}"
        systemd_timer_state: "{{ managed_node_systemd_state }}"
      when: managed_node_systemd_schedule != ''
